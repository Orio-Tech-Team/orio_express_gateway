http:
  port: 5000
apiEndpoints:
  login:
    paths: '/auth/login'
    methods: ['POST']
  modules:
    paths: '/modules/user'
    methods: ['GET']
  sliders:
    paths: '/sliders'
    methods: ['GET']
  images:
    paths: '/public/*/:fileName'
    methods: ['GET']
  consumer-application-paths:
    paths: '/consumer-app/*'
serviceEndpoints:
  user-mangement:
    url: 'http://localhost:5001'
  consumer-application:
    url: 'http://localhost:5002'
  
policies:
  - basic-auth
  - cors
  - expression
  - key-auth
  - log
  - oauth2
  - proxy
  - rate-limit
  - jwt
pipelines:
  user-management-endpoints:
    apiEndpoints:
      - login
      - images
    policies:
      - proxy:
          - action:
              serviceEndpoint: user-mangement
  consumer-application-endpoints:
    apiEndpoints:
      - consumer-application-paths
    policies:
      - jwt:
        - action:
            secretOrPublicKey: 3GKsOqRULgOicqaAgzPWGO
            checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: consumer-application
      - rate-limit:
          action:
            max: 500 # limit to 500 req per default period windowMs=60000 (1 minute)
  user-management-endpoints-with-jwt:
    apiEndpoints:
      - modules
      - sliders
    policies:
      - jwt:
        - action:
            secretOrPublicKey: 3GKsOqRULgOicqaAgzPWGO
            checkCredentialExistence: false
      - proxy:
          - action:
              serviceEndpoint: user-mangement
      - rate-limit:
          action:
            max: 500 # limit to 500 req per default period windowMs=60000 (1 minute)